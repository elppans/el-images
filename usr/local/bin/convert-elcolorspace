#!/bin/bash

# Função para exibir a ajuda
function show_help {
    echo "Uso: $0 [opções] [espaço de cores] [diretório ou arquivos]"
    echo "Opções:"
    echo "  -o, --output-dir   Diretório para salvar as imagens convertidas (padrão: convertido/ no diretório atual)"
    echo "  -h, --help         Exibe esta ajuda"
    echo
    echo "Espaços de cores suportados:"
    echo "  rgb      - Converte para RGB"
    echo "  cmyk     - Converte para CMYK"
    echo "  gray     - Converte para escala de cinza"
    echo "  lab      - Converte para LAB"
    echo "  ycbcr    - Converte para YCbCr"
    echo
    echo "Exemplos:"
    echo "  $0 rgb /caminho/para/imagens/"
    echo "  $0 cmyk -o /caminho/saida/ /caminho/para/imagem1.jpg /caminho/para/imagem2.png"
}

# Valores padrão
output_dir="./convertido"

# Parsing das opções
while [[ "$1" =~ ^- && ! "$1" == "--" ]]; do case $1 in
  -o | --output-dir )
    shift; output_dir="$1"
    ;;
  -h | --help )
    show_help
    exit 0
    ;;
esac; shift; done

# Verifica se o espaço de cores foi fornecido
if [ -z "$1" ]; then
    echo "Erro: Nenhum espaço de cores especificado."
    show_help
    exit 1
fi

color_space="$1"
shift  # Remove o primeiro argumento (espaço de cores)

# Verifica se há arquivos ou diretório fornecidos
if [ -z "$1" ]; then
    echo "Erro: Nenhum diretório ou arquivo especificado."
    show_help
    exit 1
fi

# Verifica se o diretório de saída existe; caso contrário, cria
mkdir -p "$output_dir"

# Se for um diretório, pega todas as imagens dentro dele
if [ -d "$1" ]; then
    files=("$1"/*)
else
    files=("$@")
fi

# Verifica se há arquivos no array
if [ ${#files[@]} -eq 0 ]; then
    echo "Erro: Nenhuma imagem encontrada no diretório ou arquivos especificados."
    exit 1
fi

# Define o perfil de cores correto para cada opção
case "$color_space" in
    rgb)
        convert_space="sRGB"
        ;;
    cmyk)
        convert_space="CMYK"
        ;;
    gray)
        convert_space="Gray"
        ;;
    lab)
        convert_space="Lab"
        ;;
    ycbcr)
        convert_space="YCbCr"
        ;;
    *)
        echo "Erro: Espaço de cores inválido. Use rgb, cmyk, gray, lab ou ycbcr."
        show_help
        exit 1
        ;;
esac

# Processa as imagens
for file in "${files[@]}"; do
    if [[ -f "$file" ]]; then
        filename=$(basename "$file")
        output_file="$output_dir/$filename"

        convert "$file" -colorspace "$convert_space" "$output_file"

        if [ $? -eq 0 ]; then
            echo "Convertido: $file -> $output_file ($convert_space)"
        else
            echo "Erro ao converter: $file"
        fi
    fi
done

echo "Conversão concluída! Imagens salvas em: $output_dir"
